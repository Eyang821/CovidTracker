package au.edu.unsw.infs3634.covidtracker;
//package com.countrySummary;

import java.util.List;
import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;

public class Response {

    @SerializedName("ID")
    @Expose
    private String id;
    @SerializedName("Message")
    @Expose
    private String message;
    @SerializedName("Global")
    @Expose
    private Global global;
    @SerializedName("Countries")
    @Expose
    private List<Country> countries = null;
    @SerializedName("Date")
    @Expose
    private String date;

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    public Global getGlobal() {
        return global;
    }

    public void setGlobal(Global global) {
        this.global = global;
    }

    public List<Country> getCountries() {
        return countries;
    }

    public void setCountries(List<Country> countries) {
        this.countries = countries;
    }

    public String getDate() {
        return date;
    }

    public void setDate(String date) {
        this.date = date;
    }

    public static String json = "Fork me on GitHub jsonschema2pojo Generate Plain Old Java Objects from JSON or JSON-Schema. { \"ID\": \"02dfd235-4271-4976-9586-a2b47f049d78\", \"Message\": \"\", \"Global\": { \"NewConfirmed\": 410788, \"TotalConfirmed\": 127180360, \"NewDeaths\": 6728, \"TotalDeaths\": 2784208, \"NewRecovered\": 321922, \"TotalRecovered\": 72243722, \"Date\": \"2021-03-30T03:47:28.643Z\" }, \"Countries\": [ { \"ID\": \"f48810a7-b1ea-4ac8-a1b5-63394f281d5c\", \"Country\": \"Afghanistan\", \"CountryCode\": \"AF\", \"Slug\": \"afghanistan\", \"NewConfirmed\": 28, \"TotalConfirmed\": 56322, \"NewDeaths\": 2, \"TotalDeaths\": 2472, \"NewRecovered\": 653, \"TotalRecovered\": 50666, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"0b5eceec-f5fc-4225-a64e-78cb7d805cf8\", \"Country\": \"Albania\", \"CountryCode\": \"AL\", \"Slug\": \"albania\", \"NewConfirmed\": 285, \"TotalConfirmed\": 124419, \"NewDeaths\": 6, \"TotalDeaths\": 2216, \"NewRecovered\": 568, \"TotalRecovered\": 90024, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"80b2bd7c-3579-4530-adba-68fc30146eac\", \"Country\": \"Algeria\", \"CountryCode\": \"DZ\", \"Slug\": \"algeria\", \"NewConfirmed\": 110, \"TotalConfirmed\": 116946, \"NewDeaths\": 4, \"TotalDeaths\": 3084, \"NewRecovered\": 33, \"TotalRecovered\": 81349, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"843b8658-1609-4ddc-ab48-a5aa81dae1db\", \"Country\": \"Andorra\", \"CountryCode\": \"AD\", \"Slug\": \"andorra\", \"NewConfirmed\": 38, \"TotalConfirmed\": 11888, \"NewDeaths\": 0, \"TotalDeaths\": 115, \"NewRecovered\": 40, \"TotalRecovered\": 11244, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"c529c420-ba8d-4cd3-8c17-66c9c7608b00\", \"Country\": \"Angola\", \"CountryCode\": \"AO\", \"Slug\": \"angola\", \"NewConfirmed\": 69, \"TotalConfirmed\": 22132, \"NewDeaths\": 1, \"TotalDeaths\": 534, \"NewRecovered\": 91, \"TotalRecovered\": 20380, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"18b7140b-e282-4642-8451-eb02f6cfe8f9\", \"Country\": \"Antigua and Barbuda\", \"CountryCode\": \"AG\", \"Slug\": \"antigua-and-barbuda\", \"NewConfirmed\": 8, \"TotalConfirmed\": 1136, \"NewDeaths\": 0, \"TotalDeaths\": 28, \"NewRecovered\": 36, \"TotalRecovered\": 820, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"4e521296-b1d7-4a63-9e61-405049f33a9c\", \"Country\": \"Argentina\", \"CountryCode\": \"AR\", \"Slug\": \"argentina\", \"NewConfirmed\": 0, \"TotalConfirmed\": 2308597, \"NewDeaths\": 162, \"TotalDeaths\": 55611, \"NewRecovered\": 8741, \"TotalRecovered\": 2088256, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"d333dd7e-2acd-4e71-b422-c60a9e537bce\", \"Country\": \"Armenia\", \"CountryCode\": \"AM\", \"Slug\": \"armenia\", \"NewConfirmed\": 424, \"TotalConfirmed\": 190741, \"NewDeaths\": 12, \"TotalDeaths\": 3476, \"NewRecovered\": 590, \"TotalRecovered\": 172096, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"e318af86-7ae9-44f0-8d00-2592f8789eb9\", \"Country\": \"Australia\", \"CountryCode\": \"AU\", \"Slug\": \"australia\", \"NewConfirmed\": 17, \"TotalConfirmed\": 29276, \"NewDeaths\": 0, \"TotalDeaths\": 909, \"NewRecovered\": 8, \"TotalRecovered\": 23004, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"34f00f9a-9382-493a-ac50-6ef9f04604d7\", \"Country\": \"Austria\", \"CountryCode\": \"AT\", \"Slug\": \"austria\", \"NewConfirmed\": 3076, \"TotalConfirmed\": 539541, \"NewDeaths\": 19, \"TotalDeaths\": 9275, \"NewRecovered\": 2758, \"TotalRecovered\": 494377, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"804a039b-8d6a-4830-b822-348d4a066433\", \"Country\": \"Azerbaijan\", \"CountryCode\": \"AZ\", \"Slug\": \"azerbaijan\", \"NewConfirmed\": 1129, \"TotalConfirmed\": 257330, \"NewDeaths\": 22, \"TotalDeaths\": 3513, \"NewRecovered\": 349, \"TotalRecovered\": 236500, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"943ba495-1d70-48f7-ac65-70e985cc5227\", \"Country\": \"Bahamas\", \"CountryCode\": \"BS\", \"Slug\": \"bahamas\", \"NewConfirmed\": 65, \"TotalConfirmed\": 9000, \"NewDeaths\": 0, \"TotalDeaths\": 188, \"NewRecovered\": 84, \"TotalRecovered\": 7841, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"d4c08c0e-9438-4560-a826-f1584d9a75a6\", \"Country\": \"Bahrain\", \"CountryCode\": \"BH\", \"Slug\": \"bahrain\", \"NewConfirmed\": 824, \"TotalConfirmed\": 142669, \"NewDeaths\": 2, \"TotalDeaths\": 515, \"NewRecovered\": 655, \"TotalRecovered\": 133753, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"f8f70cf8-6f8f-4ebd-a095-e35bf4ea81af\", \"Country\": \"Bangladesh\", \"CountryCode\": \"BD\", \"Slug\": \"bangladesh\", \"NewConfirmed\": 5181, \"TotalConfirmed\": 600895, \"NewDeaths\": 45, \"TotalDeaths\": 8949, \"NewRecovered\": 2077, \"TotalRecovered\": 537718, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"50f4286d-63b5-4f03-9c78-21c1b72496ba\", \"Country\": \"Barbados\", \"CountryCode\": \"BB\", \"Slug\": \"barbados\", \"NewConfirmed\": 0, \"TotalConfirmed\": 3629, \"NewDeaths\": 0, \"TotalDeaths\": 41, \"NewRecovered\": 0, \"TotalRecovered\": 3436, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"0201086b-3b3b-4550-8b80-ff6a990de472\", \"Country\": \"Belarus\", \"CountryCode\": \"BY\", \"Slug\": \"belarus\", \"NewConfirmed\": 918, \"TotalConfirmed\": 319599, \"NewDeaths\": 8, \"TotalDeaths\": 2227, \"NewRecovered\": 654, \"TotalRecovered\": 310189, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"9225b35e-4387-4d00-a10f-e34e54ff7b6d\", \"Country\": \"Belgium\", \"CountryCode\": \"BE\", \"Slug\": \"belgium\", \"NewConfirmed\": 4694, \"TotalConfirmed\": 870757, \"NewDeaths\": 27, \"TotalDeaths\": 22897, \"NewRecovered\": 0, \"TotalRecovered\": 0, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"34de6d82-456a-41ed-a546-97784e7f4ed3\", \"Country\": \"Belize\", \"CountryCode\": \"BZ\", \"Slug\": \"belize\", \"NewConfirmed\": 0, \"TotalConfirmed\": 12415, \"NewDeaths\": 0, \"TotalDeaths\": 317, \"NewRecovered\": 0, \"TotalRecovered\": 12061, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"2a328e86-9b7f-4acd-a316-2f5e1e54f83c\", \"Country\": \"Benin\", \"CountryCode\": \"BJ\", \"Slug\": \"benin\", \"NewConfirmed\": 0, \"TotalConfirmed\": 7100, \"NewDeaths\": 0, \"TotalDeaths\": 90, \"NewRecovered\": 0, \"TotalRecovered\": 6452, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"b3baa4a9-5158-4904-9f7a-537d732157c0\", \"Country\": \"Bhutan\", \"CountryCode\": \"BT\", \"Slug\": \"bhutan\", \"NewConfirmed\": 0, \"TotalConfirmed\": 872, \"NewDeaths\": 0, \"TotalDeaths\": 1, \"NewRecovered\": 0, \"TotalRecovered\": 867, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"04ba875a-6714-427d-8fb8-556165c3396e\", \"Country\": \"Bolivia\", \"CountryCode\": \"BO\", \"Slug\": \"bolivia\", \"NewConfirmed\": 0, \"TotalConfirmed\": 269628, \"NewDeaths\": 0, \"TotalDeaths\": 12186, \"NewRecovered\": 0, \"TotalRecovered\": 218503, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"25aa09c8-1fc3-42cb-ac70-658f36643e1b\", \"Country\": \"Bosnia and Herzegovina\", \"CountryCode\": \"BA\", \"Slug\": \"bosnia-and-herzegovina\", \"NewConfirmed\": 3755, \"TotalConfirmed\": 165787, \"NewDeaths\": 207, \"TotalDeaths\": 6427, \"NewRecovered\": 739, \"TotalRecovered\": 128980, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"75038c17-8f77-4ba8-b6ce-65c10feebb6c\", \"Country\": \"Botswana\", \"CountryCode\": \"BW\", \"Slug\": \"botswana\", \"NewConfirmed\": 1382, \"TotalConfirmed\": 39848, \"NewDeaths\": 62, \"TotalDeaths\": 568, \"NewRecovered\": 3055, \"TotalRecovered\": 36958, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"29bb39a4-2d09-4513-b7f4-54f380426eb1\", \"Country\": \"Brazil\", \"CountryCode\": \"BR\", \"Slug\": \"brazil\", \"NewConfirmed\": 44326, \"TotalConfirmed\": 12534688, \"NewDeaths\": 1656, \"TotalDeaths\": 312206, \"NewRecovered\": 55899, \"TotalRecovered\": 11004281, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"98b3a56d-b3be-4f94-a406-2574e0943456\", \"Country\": \"Brunei Darussalam\", \"CountryCode\": \"BN\", \"Slug\": \"brunei\", \"NewConfirmed\": 0, \"TotalConfirmed\": 207, \"NewDeaths\": 0, \"TotalDeaths\": 3, \"NewRecovered\": 0, \"TotalRecovered\": 191, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"4a0171f9-0bc3-4ab5-ada6-e508cb7ac9ae\", \"Country\": \"Bulgaria\", \"CountryCode\": \"BG\", \"Slug\": \"bulgaria\", \"NewConfirmed\": 4497, \"TotalConfirmed\": 333250, \"NewDeaths\": 203, \"TotalDeaths\": 12913, \"NewRecovered\": 3112, \"TotalRecovered\": 252473, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"d27f848a-14a9-44d0-9cfe-5116a3d371f0\", \"Country\": \"Burkina Faso\", \"CountryCode\": \"BF\", \"Slug\": \"burkina-faso\", \"NewConfirmed\": 10, \"TotalConfirmed\": 12702, \"NewDeaths\": 0, \"TotalDeaths\": 145, \"NewRecovered\": 25, \"TotalRecovered\": 12375, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"3b03fdbf-4008-4216-8b55-4552f4c2954c\", \"Country\": \"Burundi\", \"CountryCode\": \"BI\", \"Slug\": \"burundi\", \"NewConfirmed\": 0, \"TotalConfirmed\": 2757, \"NewDeaths\": 0, \"TotalDeaths\": 6, \"NewRecovered\": 0, \"TotalRecovered\": 773, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"919773e2-bf2f-4c1b-b303-fb58e2bffc6b\", \"Country\": \"Cambodia\", \"CountryCode\": \"KH\", \"Slug\": \"cambodia\", \"NewConfirmed\": 40, \"TotalConfirmed\": 2273, \"NewDeaths\": 1, \"TotalDeaths\": 11, \"NewRecovered\": 6, \"TotalRecovered\": 1172, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"e6af93be-ba6e-47f5-9323-f4c7151a584d\", \"Country\": \"Cameroon\", \"CountryCode\": \"CM\", \"Slug\": \"cameroon\", \"NewConfirmed\": 0, \"TotalConfirmed\": 47669, \"NewDeaths\": 0, \"TotalDeaths\": 721, \"NewRecovered\": 0, \"TotalRecovered\": 35261, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"da315985-dd3d-478c-ab8a-cea2cf6a58a2\", \"Country\": \"Canada\", \"CountryCode\": \"CA\", \"Slug\": \"canada\", \"NewConfirmed\": 3539, \"TotalConfirmed\": 823699, \"NewDeaths\": 22, \"TotalDeaths\": 20871, \"NewRecovered\": 2835, \"TotalRecovered\": 904909, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"a3f15202-8093-4c06-9356-6bdaf3e6020d\", \"Country\": \"Cape Verde\", \"CountryCode\": \"CV\", \"Slug\": \"cape-verde\", \"NewConfirmed\": 65, \"TotalConfirmed\": 17190, \"NewDeaths\": 0, \"TotalDeaths\": 165, \"NewRecovered\": 85, \"TotalRecovered\": 16160, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"823c735c-6f45-46b3-9da2-ec026fc145ef\", \"Country\": \"Central African Republic\", \"CountryCode\": \"CF\", \"Slug\": \"central-african-republic\", \"NewConfirmed\": 0, \"TotalConfirmed\": 5088, \"NewDeaths\": 0, \"TotalDeaths\": 64, \"NewRecovered\": 0, \"TotalRecovered\": 4957, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"dc670452-b8d8-4355-a53c-3d13cbd75506\", \"Country\": \"Chad\", \"CountryCode\": \"TD\", \"Slug\": \"chad\", \"NewConfirmed\": 4, \"TotalConfirmed\": 4510, \"NewDeaths\": 2, \"TotalDeaths\": 164, \"NewRecovered\": 1, \"TotalRecovered\": 4110, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"cff912bd-079e-4a3e-964d-8deea63fe563\", \"Country\": \"Chile\", \"CountryCode\": \"CL\", \"Slug\": \"chile\", \"NewConfirmed\": 7330, \"TotalConfirmed\": 977243, \"NewDeaths\": 101, \"TotalDeaths\": 22754, \"NewRecovered\": 6623, \"TotalRecovered\": 912058, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"fc336dbf-9b70-4496-a516-d5d9a452d16e\", \"Country\": \"China\", \"CountryCode\": \"CN\", \"Slug\": \"china\", \"NewConfirmed\": 12, \"TotalConfirmed\": 101675, \"NewDeaths\": 0, \"TotalDeaths\": 4841, \"NewRecovered\": 10, \"TotalRecovered\": 96460, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"431d6a1c-01f6-4639-bfad-1edee2861373\", \"Country\": \"Colombia\", \"CountryCode\": \"CO\", \"Slug\": \"colombia\", \"NewConfirmed\": 7139, \"TotalConfirmed\": 2382730, \"NewDeaths\": 165, \"TotalDeaths\": 62955, \"NewRecovered\": 6387, \"TotalRecovered\": 2267760, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"0ac1e7c6-67fc-47c2-a0dd-bd8728a77870\", \"Country\": \"Comoros\", \"CountryCode\": \"KM\", \"Slug\": \"comoros\", \"NewConfirmed\": 6, \"TotalConfirmed\": 3696, \"NewDeaths\": 0, \"TotalDeaths\": 146, \"NewRecovered\": 15, \"TotalRecovered\": 3525, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"3b9509e0-8ad6-489b-987a-23171f974377\", \"Country\": \"Congo (Brazzaville)\", \"CountryCode\": \"CG\", \"Slug\": \"congo-brazzaville\", \"NewConfirmed\": 0, \"TotalConfirmed\": 9681, \"NewDeaths\": 0, \"TotalDeaths\": 135, \"NewRecovered\": 0, \"TotalRecovered\": 8208, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"79343922-22fa-4893-b338-ad62092da819\", \"Country\": \"Congo (Kinshasa)\", \"CountryCode\": \"CD\", \"Slug\": \"congo-kinshasa\", \"NewConfirmed\": 82, \"TotalConfirmed\": 28012, \"NewDeaths\": 0, \"TotalDeaths\": 739, \"NewRecovered\": 0, \"TotalRecovered\": 25398, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"ddcbc419-5e84-4806-ae87-82dd6dfd00b7\", \"Country\": \"Costa Rica\", \"CountryCode\": \"CR\", \"Slug\": \"costa-rica\", \"NewConfirmed\": 0, \"TotalConfirmed\": 215178, \"NewDeaths\": 0, \"TotalDeaths\": 2931, \"NewRecovered\": 0, \"TotalRecovered\": 191707, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"dc70fed3-8018-454a-b9db-5424baa65b78\", \"Country\": \"Croatia\", \"CountryCode\": \"HR\", \"Slug\": \"croatia\", \"NewConfirmed\": 300, \"TotalConfirmed\": 267522, \"NewDeaths\": 18, \"TotalDeaths\": 5911, \"NewRecovered\": 1084, \"TotalRecovered\": 252321, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"6336bd9c-5195-4d48-949a-f2501f46dd58\", \"Country\": \"Cuba\", \"CountryCode\": \"CU\", \"Slug\": \"cuba\", \"NewConfirmed\": 701, \"TotalConfirmed\": 73204, \"NewDeaths\": 2, \"TotalDeaths\": 417, \"NewRecovered\": 705, \"TotalRecovered\": 69204, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"cd3d8c2a-7fd2-4827-8b1e-162118415847\", \"Country\": \"Cyprus\", \"CountryCode\": \"CY\", \"Slug\": \"cyprus\", \"NewConfirmed\": 360, \"TotalConfirmed\": 44991, \"NewDeaths\": 2, \"TotalDeaths\": 254, \"NewRecovered\": 0, \"TotalRecovered\": 2057, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"668cf6fc-b50d-49ce-8079-2ce4449c7279\", \"Country\": \"Czech Republic\", \"CountryCode\": \"CZ\", \"Slug\": \"czech-republic\", \"NewConfirmed\": 1743, \"TotalConfirmed\": 1516772, \"NewDeaths\": 162, \"TotalDeaths\": 26036, \"NewRecovered\": 26542, \"TotalRecovered\": 1342113, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"b932e0f9-dd15-4bc6-8b23-16e89f5e52e3\", \"Country\": \"Côte d'Ivoire\", \"CountryCode\": \"CI\", \"Slug\": \"cote-divoire\", \"NewConfirmed\": 242, \"TotalConfirmed\": 43422, \"NewDeaths\": 2, \"TotalDeaths\": 239, \"NewRecovered\": 576, \"TotalRecovered\": 39295, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"046b34c4-8c5c-42f3-a2d0-9508dfb2c798\", \"Country\": \"Denmark\", \"CountryCode\": \"DK\", \"Slug\": \"denmark\", \"NewConfirmed\": 0, \"TotalConfirmed\": 228705, \"NewDeaths\": 0, \"TotalDeaths\": 2415, \"NewRecovered\": 0, \"TotalRecovered\": 217281, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"b44fb2fa-c19d-4307-a0d5-be2352d38b21\", \"Country\": \"Djibouti\", \"CountryCode\": \"DJ\", \"Slug\": \"djibouti\", \"NewConfirmed\": 249, \"TotalConfirmed\": 7610, \"NewDeaths\": 1, \"TotalDeaths\": 68, \"NewRecovered\": 45, \"TotalRecovered\": 6325, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"721ad7d0-4f55-4faf-8267-57bb693a619e\", \"Country\": \"Dominica\", \"CountryCode\": \"DM\", \"Slug\": \"dominica\", \"NewConfirmed\": 0, \"TotalConfirmed\": 161, \"NewDeaths\": 0, \"TotalDeaths\": 0, \"NewRecovered\": 0, \"TotalRecovered\": 153, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"85dfc678-29c3-4fa2-9983-14d81c47175c\", \"Country\": \"Dominican Republic\", \"CountryCode\": \"DO\", \"Slug\": \"dominican-republic\", \"NewConfirmed\": 199, \"TotalConfirmed\": 252182, \"NewDeaths\": 3, \"TotalDeaths\": 3307, \"NewRecovered\": 365, \"TotalRecovered\": 211409, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"adb2fa38-56b3-4aaf-bd6b-2a478b37aa4a\", \"Country\": \"Ecuador\", \"CountryCode\": \"EC\", \"Slug\": \"ecuador\", \"NewConfirmed\": 642, \"TotalConfirmed\": 325124, \"NewDeaths\": 8, \"TotalDeaths\": 16746, \"NewRecovered\": 0, \"TotalRecovered\": 281684, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"7b79985f-9b24-4b61-afb0-cf4721f57fc1\", \"Country\": \"Egypt\", \"CountryCode\": \"EG\", \"Slug\": \"egypt\", \"NewConfirmed\": 689, \"TotalConfirmed\": 200739, \"NewDeaths\": 32, \"TotalDeaths\": 11914, \"NewRecovered\": 455, \"TotalRecovered\": 153630, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"84a36b4b-48d0-48c5-8031-360819371b61\", \"Country\": \"El Salvador\", \"CountryCode\": \"SV\", \"Slug\": \"el-salvador\", \"NewConfirmed\": 665, \"TotalConfirmed\": 64431, \"NewDeaths\": 3, \"TotalDeaths\": 2003, \"NewRecovered\": 631, \"TotalRecovered\": 61640, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"53fda343-a37a-46b7-9ff7-70d62128e9a9\", \"Country\": \"Equatorial Guinea\", \"CountryCode\": \"GQ\", \"Slug\": \"equatorial-guinea\", \"NewConfirmed\": 12, \"TotalConfirmed\": 6914, \"NewDeaths\": 0, \"TotalDeaths\": 102, \"NewRecovered\": 9, \"TotalRecovered\": 6495, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"b74f68e8-19cc-4dd7-a7de-d8aeda19591d\", \"Country\": \"Eritrea\", \"CountryCode\": \"ER\", \"Slug\": \"eritrea\", \"NewConfirmed\": 43, \"TotalConfirmed\": 3251, \"NewDeaths\": 0, \"TotalDeaths\": 9, \"NewRecovered\": 23, \"TotalRecovered\": 2993, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"34cbd11a-90cf-4be3-8ec7-617cca1ac048\", \"Country\": \"Estonia\", \"CountryCode\": \"EE\", \"Slug\": \"estonia\", \"NewConfirmed\": 584, \"TotalConfirmed\": 104214, \"NewDeaths\": 11, \"TotalDeaths\": 879, \"NewRecovered\": 597, \"TotalRecovered\": 77867, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"68b16aeb-de1f-4661-9154-551e7563a043\", \"Country\": \"Ethiopia\", \"CountryCode\": \"ET\", \"Slug\": \"ethiopia\", \"NewConfirmed\": 1982, \"TotalConfirmed\": 202545, \"NewDeaths\": 24, \"TotalDeaths\": 2825, \"NewRecovered\": 867, \"TotalRecovered\": 155190, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"e739d647-b43a-469d-809b-28353a9d6b07\", \"Country\": \"Fiji\", \"CountryCode\": \"FJ\", \"Slug\": \"fiji\", \"NewConfirmed\": 0, \"TotalConfirmed\": 67, \"NewDeaths\": 0, \"TotalDeaths\": 2, \"NewRecovered\": 0, \"TotalRecovered\": 64, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"e978124e-ed0d-4337-8f82-7836e75adca8\", \"Country\": \"Finland\", \"CountryCode\": \"FI\", \"Slug\": \"finland\", \"NewConfirmed\": 422, \"TotalConfirmed\": 76425, \"NewDeaths\": 5, \"TotalDeaths\": 822, \"NewRecovered\": 0, \"TotalRecovered\": 46000, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"9984f59d-c419-4877-a3bb-f34c2809a287\", \"Country\": \"France\", \"CountryCode\": \"FR\", \"Slug\": \"france\", \"NewConfirmed\": 0, \"TotalConfirmed\": 4606185, \"NewDeaths\": 0, \"TotalDeaths\": 94754, \"NewRecovered\": 0, \"TotalRecovered\": 296581, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"e66c64ab-fc03-4760-9fe2-f2c390acaaa0\", \"Country\": \"Macedonia, Republic of\", \"CountryCode\": \"MK\", \"Slug\": \"macedonia\", \"NewConfirmed\": 302, \"TotalConfirmed\": 127240, \"NewDeaths\": 41, \"TotalDeaths\": 3716, \"NewRecovered\": 1168, \"TotalRecovered\": 105524, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"b369bb49-9017-48ed-8948-7f1e91bac098\", \"Country\": \"Madagascar\", \"CountryCode\": \"MG\", \"Slug\": \"madagascar\", \"NewConfirmed\": 384, \"TotalConfirmed\": 23969, \"NewDeaths\": 7, \"TotalDeaths\": 394, \"NewRecovered\": 35, \"TotalRecovered\": 21671, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"8ecce4b8-2be9-49d4-872b-4c70d96ad020\", \"Country\": \"Malaysia\", \"CountryCode\": \"MY\", \"Slug\": \"malaysia\", \"NewConfirmed\": 941, \"TotalConfirmed\": 342885, \"NewDeaths\": 5, \"TotalDeaths\": 1260, \"NewRecovered\": 1097, \"TotalRecovered\": 327406, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"22e57b78-322e-47e3-9de6-e5432f1fc1f4\", \"Country\": \"Maldives\", \"CountryCode\": \"MV\", \"Slug\": \"maldives\", \"NewConfirmed\": 147, \"TotalConfirmed\": 23671, \"NewDeaths\": 0, \"TotalDeaths\": 66, \"NewRecovered\": 116, \"TotalRecovered\": 20839, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"d900ac59-3ca3-4b85-a570-671c13079491\", \"Country\": \"Mali\", \"CountryCode\": \"ML\", \"Slug\": \"mali\", \"NewConfirmed\": 50, \"TotalConfirmed\": 9921, \"NewDeaths\": 5, \"TotalDeaths\": 384, \"NewRecovered\": 5, \"TotalRecovered\": 6790, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"2dc8e9d0-8467-4ced-996d-d135a57a39c8\", \"Country\": \"Malta\", \"CountryCode\": \"MT\", \"Slug\": \"malta\", \"NewConfirmed\": 63, \"TotalConfirmed\": 28938, \"NewDeaths\": 1, \"TotalDeaths\": 388, \"NewRecovered\": 332, \"TotalRecovered\": 27418, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"0a3c06b2-b29b-42d6-9322-3ef3afc5b549\", \"Country\": \"Marshall Islands\", \"CountryCode\": \"MH\", \"Slug\": \"marshall-islands\", \"NewConfirmed\": 0, \"TotalConfirmed\": 4, \"NewDeaths\": 0, \"TotalDeaths\": 0, \"NewRecovered\": 0, \"TotalRecovered\": 4, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"3841052a-d8dd-4889-8265-9bfb69888631\", \"Country\": \"Mauritania\", \"CountryCode\": \"MR\", \"Slug\": \"mauritania\", \"NewConfirmed\": 25, \"TotalConfirmed\": 17796, \"NewDeaths\": 1, \"TotalDeaths\": 449, \"NewRecovered\": 30, \"TotalRecovered\": 17038, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"e4ca05ae-58c6-4d6b-a775-20a79e5de1c6\", \"Country\": \"Mexico\", \"CountryCode\": \"MX\", \"Slug\": \"mexico\", \"NewConfirmed\": 1646, \"TotalConfirmed\": 2226550, \"NewDeaths\": 194, \"TotalDeaths\": 201623, \"NewRecovered\": 2663, \"TotalRecovered\": 1761786, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"cbda6795-127e-4050-92fa-8f6510192371\", \"Country\": \"Norway\", \"CountryCode\": \"NO\", \"Slug\": \"norway\", \"NewConfirmed\": 989, \"TotalConfirmed\": 94139, \"NewDeaths\": 4, \"TotalDeaths\": 660, \"NewRecovered\": 0, \"TotalRecovered\": 17998, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"b8494eaa-3737-4058-8c4a-be4d10bb11f6\", \"Country\": \"Oman\", \"CountryCode\": \"OM\", \"Slug\": \"oman\", \"NewConfirmed\": 796, \"TotalConfirmed\": 156883, \"NewDeaths\": 1, \"TotalDeaths\": 1662, \"NewRecovered\": 524, \"TotalRecovered\": 142944, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"4e505b40-fe34-402e-aaee-b8a715947c81\", \"Country\": \"Pakistan\", \"CountryCode\": \"PK\", \"Slug\": \"pakistan\", \"NewConfirmed\": 4525, \"TotalConfirmed\": 659116, \"NewDeaths\": 41, \"TotalDeaths\": 14256, \"NewRecovered\": 2268, \"TotalRecovered\": 598197, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"d7581d89-640c-42df-8994-414bd5c041ba\", \"Country\": \"Palestinian Territory\", \"CountryCode\": \"PS\", \"Slug\": \"palestine\", \"NewConfirmed\": 1786, \"TotalConfirmed\": 238248, \"NewDeaths\": 18, \"TotalDeaths\": 2599, \"NewRecovered\": 1181, \"TotalRecovered\": 211521, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"388ca5d0-705a-4c18-9a57-7f9464bb10d7\", \"Country\": \"Panama\", \"CountryCode\": \"PA\", \"Slug\": \"panama\", \"NewConfirmed\": 246, \"TotalConfirmed\": 354085, \"NewDeaths\": 3, \"TotalDeaths\": 6103, \"NewRecovered\": 283, \"TotalRecovered\": 343057, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"74ab0675-7324-4b78-baf9-0495750b0c59\", \"Country\": \"Papua New Guinea\", \"CountryCode\": \"PG\", \"Slug\": \"papua-new-guinea\", \"NewConfirmed\": 165, \"TotalConfirmed\": 5349, \"NewDeaths\": 4, \"TotalDeaths\": 49, \"NewRecovered\": 0, \"TotalRecovered\": 846, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"a72a2fe1-81c3-4ab2-ade9-9f508a8bf57f\", \"Country\": \"Paraguay\", \"CountryCode\": \"PY\", \"Slug\": \"paraguay\", \"NewConfirmed\": 0, \"TotalConfirmed\": 208655, \"NewDeaths\": 0, \"TotalDeaths\": 4063, \"NewRecovered\": 0, \"TotalRecovered\": 170802, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"4e202779-62b6-4f34-8849-082f176b0ba4\", \"Country\": \"Peru\", \"CountryCode\": \"PE\", \"Slug\": \"peru\", \"NewConfirmed\": 8909, \"TotalConfirmed\": 1529882, \"NewDeaths\": 231, \"TotalDeaths\": 51469, \"NewRecovered\": 9955, \"TotalRecovered\": 1442405, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"f6dfc0d2-b158-477d-adac-6d0d662dd6d2\", \"Country\": \"Philippines\", \"CountryCode\": \"PH\", \"Slug\": \"philippines\", \"NewConfirmed\": 10002, \"TotalConfirmed\": 731894, \"NewDeaths\": 16, \"TotalDeaths\": 13186, \"NewRecovered\": 59, \"TotalRecovered\": 603213, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"f0a04ee7-24c7-437d-ab29-eacc8d8f9570\", \"Country\": \"Poland\", \"CountryCode\": \"PL\", \"Slug\": \"poland\", \"NewConfirmed\": 16973, \"TotalConfirmed\": 2267964, \"NewDeaths\": 48, \"TotalDeaths\": 51932, \"NewRecovered\": 25509, \"TotalRecovered\": 1824431, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"e25ddda7-bbff-4628-98c7-8a3a5cc51481\", \"Country\": \"Portugal\", \"CountryCode\": \"PT\", \"Slug\": \"portugal\", \"NewConfirmed\": 309, \"TotalConfirmed\": 820716, \"NewDeaths\": 6, \"TotalDeaths\": 16843, \"NewRecovered\": 458, \"TotalRecovered\": 775849, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"6af3b090-92fc-464e-ae55-3f5904d7c1a5\", \"Country\": \"Qatar\", \"CountryCode\": \"QA\", \"Slug\": \"qatar\", \"NewConfirmed\": 690, \"TotalConfirmed\": 178464, \"NewDeaths\": 2, \"TotalDeaths\": 286, \"NewRecovered\": 362, \"TotalRecovered\": 163272, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"b51a4898-17e0-4c97-9ec7-4f4be7eefe9a\", \"Country\": \"Spain\", \"CountryCode\": \"ES\", \"Slug\": \"spain\", \"NewConfirmed\": 0, \"TotalConfirmed\": 3255324, \"NewDeaths\": 0, \"TotalDeaths\": 75010, \"NewRecovered\": 0, \"TotalRecovered\": 150376, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"09afad47-e482-4c6a-91b0-0cde5ba646eb\", \"Country\": \"Sri Lanka\", \"CountryCode\": \"LK\", \"Slug\": \"sri-lanka\", \"NewConfirmed\": 215, \"TotalConfirmed\": 92303, \"NewDeaths\": 5, \"TotalDeaths\": 566, \"NewRecovered\": 291, \"TotalRecovered\": 88914, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"59ee346c-c83f-4c2c-bc1b-bf30f99aac7b\", \"Country\": \"Sudan\", \"CountryCode\": \"SD\", \"Slug\": \"sudan\", \"NewConfirmed\": 0, \"TotalConfirmed\": 31407, \"NewDeaths\": 0, \"TotalDeaths\": 2028, \"NewRecovered\": 0, \"TotalRecovered\": 23990, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"04f373f1-7183-4b2c-a58d-4d87b065223a\", \"Country\": \"Suriname\", \"CountryCode\": \"SR\", \"Slug\": \"suriname\", \"NewConfirmed\": 0, \"TotalConfirmed\": 9097, \"NewDeaths\": 0, \"TotalDeaths\": 177, \"NewRecovered\": 0, \"TotalRecovered\": 8579, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"b8143f24-f32d-455b-9c3d-bc6fb99c1569\", \"Country\": \"Swaziland\", \"CountryCode\": \"SZ\", \"Slug\": \"swaziland\", \"NewConfirmed\": 5, \"TotalConfirmed\": 17326, \"NewDeaths\": 0, \"TotalDeaths\": 667, \"NewRecovered\": 9, \"TotalRecovered\": 16427, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"f8adbb55-d8fd-4a6c-9ae8-07dc85b34afe\", \"Country\": \"Sweden\", \"CountryCode\": \"SE\", \"Slug\": \"sweden\", \"NewConfirmed\": 0, \"TotalConfirmed\": 780018, \"NewDeaths\": 0, \"TotalDeaths\": 13402, \"NewRecovered\": 0, \"TotalRecovered\": 0, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"915262ec-1518-42a2-af6c-fd43c140b21f\", \"Country\": \"Switzerland\", \"CountryCode\": \"CH\", \"Slug\": \"switzerland\", \"NewConfirmed\": 4573, \"TotalConfirmed\": 596790, \"NewDeaths\": 5, \"TotalDeaths\": 10305, \"NewRecovered\": 0, \"TotalRecovered\": 317600, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"19b8f9c3-f6b3-40b7-9398-c33ceffb4012\", \"Country\": \"Syrian Arab Republic (Syria)\", \"CountryCode\": \"SY\", \"Slug\": \"syria\", \"NewConfirmed\": 140, \"TotalConfirmed\": 18638, \"NewDeaths\": 8, \"TotalDeaths\": 1247, \"NewRecovered\": 115, \"TotalRecovered\": 12492, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"063984c8-c42b-4ac4-b282-25365bf98acd\", \"Country\": \"Taiwan, Republic of China\", \"CountryCode\": \"TW\", \"Slug\": \"taiwan\", \"NewConfirmed\": 1, \"TotalConfirmed\": 1023, \"NewDeaths\": 0, \"TotalDeaths\": 10, \"NewRecovered\": 0, \"TotalRecovered\": 979, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"3e70f34d-0260-46e3-bdb6-f804532d003a\", \"Country\": \"Tajikistan\", \"CountryCode\": \"TJ\", \"Slug\": \"tajikistan\", \"NewConfirmed\": 0, \"TotalConfirmed\": 13308, \"NewDeaths\": 0, \"TotalDeaths\": 90, \"NewRecovered\": 0, \"TotalRecovered\": 13218, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"7ac14194-72a4-4ae2-8059-fba541088b7e\", \"Country\": \"Tanzania, United Republic of\", \"CountryCode\": \"TZ\", \"Slug\": \"tanzania\", \"NewConfirmed\": 0, \"TotalConfirmed\": 509, \"NewDeaths\": 0, \"TotalDeaths\": 21, \"NewRecovered\": 0, \"TotalRecovered\": 183, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"75880406-515e-49d9-bdd1-43543b2cfcfe\", \"Country\": \"Thailand\", \"CountryCode\": \"TH\", \"Slug\": \"thailand\", \"NewConfirmed\": 39, \"TotalConfirmed\": 28773, \"NewDeaths\": 0, \"TotalDeaths\": 94, \"NewRecovered\": 0, \"TotalRecovered\": 26873, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"e4658bf1-6791-45b3-8051-f61eb8a2eaa8\", \"Country\": \"Timor-Leste\", \"CountryCode\": \"TL\", \"Slug\": \"timor-leste\", \"NewConfirmed\": 21, \"TotalConfirmed\": 512, \"NewDeaths\": 0, \"TotalDeaths\": 0, \"NewRecovered\": 1, \"TotalRecovered\": 170, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"5b6bf0a3-3345-4705-84ad-a84cfabeed62\", \"Country\": \"Togo\", \"CountryCode\": \"TG\", \"Slug\": \"togo\", \"NewConfirmed\": 37, \"TotalConfirmed\": 9992, \"NewDeaths\": 0, \"TotalDeaths\": 107, \"NewRecovered\": 38, \"TotalRecovered\": 7770, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"88c17330-147f-4e9e-b706-7013af84d7e5\", \"Country\": \"Trinidad and Tobago\", \"CountryCode\": \"TT\", \"Slug\": \"trinidad-and-tobago\", \"NewConfirmed\": 9, \"TotalConfirmed\": 7986, \"NewDeaths\": 0, \"TotalDeaths\": 142, \"NewRecovered\": 4, \"TotalRecovered\": 7599, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"8656a190-2a96-4896-91a3-d05f31521e55\", \"Country\": \"Turkey\", \"CountryCode\": \"TR\", \"Slug\": \"turkey\", \"NewConfirmed\": 32404, \"TotalConfirmed\": 3240577, \"NewDeaths\": 154, \"TotalDeaths\": 31230, \"NewRecovered\": 18015, \"TotalRecovered\": 2975108, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"5b22a681-9dd7-4933-ace9-2fae140034fb\", \"Country\": \"Uganda\", \"CountryCode\": \"UG\", \"Slug\": \"uganda\", \"NewConfirmed\": 26, \"TotalConfirmed\": 40820, \"NewDeaths\": 0, \"TotalDeaths\": 335, \"NewRecovered\": 26, \"TotalRecovered\": 40448, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"cde3f822-5d60-4454-97ba-b9c7d0389467\", \"Country\": \"Ukraine\", \"CountryCode\": \"UA\", \"Slug\": \"ukraine\", \"NewConfirmed\": 12041, \"TotalConfirmed\": 1694568, \"NewDeaths\": 208, \"TotalDeaths\": 33571, \"NewRecovered\": 3396, \"TotalRecovered\": 1347738, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"37cbf7c5-5daa-439e-b963-8d5bc43a02fc\", \"Country\": \"United Arab Emirates\", \"CountryCode\": \"AE\", \"Slug\": \"united-arab-emirates\", \"NewConfirmed\": 1874, \"TotalConfirmed\": 457071, \"NewDeaths\": 5, \"TotalDeaths\": 1486, \"NewRecovered\": 2025, \"TotalRecovered\": 440731, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"24cfb09a-a3ff-4d6e-9fc1-2632597e3474\", \"Country\": \"United Kingdom\", \"CountryCode\": \"GB\", \"Slug\": \"united-kingdom\", \"NewConfirmed\": 3947, \"TotalConfirmed\": 4347013, \"NewDeaths\": 21, \"TotalDeaths\": 126834, \"NewRecovered\": 62, \"TotalRecovered\": 12774, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"ee1f84bb-dbdf-4ebb-b9e5-abd6ea9a263e\", \"Country\": \"United States of America\", \"CountryCode\": \"US\", \"Slug\": \"united-states\", \"NewConfirmed\": 43694, \"TotalConfirmed\": 30262377, \"NewDeaths\": 506, \"TotalDeaths\": 549335, \"NewRecovered\": 0, \"TotalRecovered\": 0, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"33ad7dff-e3ce-4681-9023-2162e24ee449\", \"Country\": \"Venezuela (Bolivarian Republic)\", \"CountryCode\": \"VE\", \"Slug\": \"venezuela\", \"NewConfirmed\": 0, \"TotalConfirmed\": 156655, \"NewDeaths\": 0, \"TotalDeaths\": 1565, \"NewRecovered\": 0, \"TotalRecovered\": 145293, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"23443ce3-9693-4dd6-b027-8c5e79ecf4d0\", \"Country\": \"Viet Nam\", \"CountryCode\": \"VN\", \"Slug\": \"vietnam\", \"NewConfirmed\": 3, \"TotalConfirmed\": 2594, \"NewDeaths\": 0, \"TotalDeaths\": 35, \"NewRecovered\": 0, \"TotalRecovered\": 2308, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"24393299-c037-425f-9f64-4c4aedd3e577\", \"Country\": \"Yemen\", \"CountryCode\": \"YE\", \"Slug\": \"yemen\", \"NewConfirmed\": 82, \"TotalConfirmed\": 4115, \"NewDeaths\": 12, \"TotalDeaths\": 863, \"NewRecovered\": 51, \"TotalRecovered\": 1657, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"af9b2f52-2168-44c8-8f56-ceed103e4aae\", \"Country\": \"Zimbabwe\", \"CountryCode\": \"ZW\", \"Slug\": \"zimbabwe\", \"NewConfirmed\": 17, \"TotalConfirmed\": 36839, \"NewDeaths\": 0, \"TotalDeaths\": 1520, \"NewRecovered\": 14, \"TotalRecovered\": 34617, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} } ], \"Date\": \"2021-03-30T03:47:28.643Z\" } 1340 1341 1342 1343 1344 1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 \"NewRecovered\": 38, \"TotalRecovered\": 7770, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"88c17330-147f-4e9e-b706-7013af84d7e5\", \"Country\": \"Trinidad and Tobago\", \"CountryCode\": \"TT\", \"Slug\": \"trinidad-and-tobago\", \"NewConfirmed\": 9, \"TotalConfirmed\": 7986, \"NewDeaths\": 0, \"TotalDeaths\": 142, \"NewRecovered\": 4, \"TotalRecovered\": 7599, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"8656a190-2a96-4896-91a3-d05f31521e55\", \"Country\": \"Turkey\", \"CountryCode\": \"TR\", \"Slug\": \"turkey\", \"NewConfirmed\": 32404, \"TotalConfirmed\": 3240577, \"NewDeaths\": 154, \"TotalDeaths\": 31230, \"NewRecovered\": 18015, \"TotalRecovered\": 2975108, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"5b22a681-9dd7-4933-ace9-2fae140034fb\", \"Country\": \"Uganda\", \"CountryCode\": \"UG\", \"Slug\": \"uganda\", \"NewConfirmed\": 26, \"TotalConfirmed\": 40820, \"NewDeaths\": 0, \"TotalDeaths\": 335, \"NewRecovered\": 26, \"TotalRecovered\": 40448, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"cde3f822-5d60-4454-97ba-b9c7d0389467\", \"Country\": \"Ukraine\", \"CountryCode\": \"UA\", \"Slug\": \"ukraine\", \"NewConfirmed\": 12041, \"TotalConfirmed\": 1694568, \"NewDeaths\": 208, \"TotalDeaths\": 33571, \"NewRecovered\": 3396, \"TotalRecovered\": 1347738, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"37cbf7c5-5daa-439e-b963-8d5bc43a02fc\", \"Country\": \"United Arab Emirates\", \"CountryCode\": \"AE\", \"Slug\": \"united-arab-emirates\", \"NewConfirmed\": 1874, \"TotalConfirmed\": 457071, \"NewDeaths\": 5, \"TotalDeaths\": 1486, \"NewRecovered\": 2025, \"TotalRecovered\": 440731, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"24cfb09a-a3ff-4d6e-9fc1-2632597e3474\", \"Country\": \"United Kingdom\", \"CountryCode\": \"GB\", \"Slug\": \"united-kingdom\", \"NewConfirmed\": 3947, \"TotalConfirmed\": 4347013, \"NewDeaths\": 21, \"TotalDeaths\": 126834, \"NewRecovered\": 62, \"TotalRecovered\": 12774, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"ee1f84bb-dbdf-4ebb-b9e5-abd6ea9a263e\", \"Country\": \"United States of America\", \"CountryCode\": \"US\", \"Slug\": \"united-states\", \"NewConfirmed\": 43694, \"TotalConfirmed\": 30262377, \"NewDeaths\": 506, \"TotalDeaths\": 549335, \"NewRecovered\": 0, \"TotalRecovered\": 0, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"33ad7dff-e3ce-4681-9023-2162e24ee449\", \"Country\": \"Venezuela (Bolivarian Republic)\", \"CountryCode\": \"VE\", \"Slug\": \"venezuela\", \"NewConfirmed\": 0, \"TotalConfirmed\": 156655, \"NewDeaths\": 0, \"TotalDeaths\": 1565, \"NewRecovered\": 0, \"TotalRecovered\": 145293, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"23443ce3-9693-4dd6-b027-8c5e79ecf4d0\", \"Country\": \"Viet Nam\", \"CountryCode\": \"VN\", \"Slug\": \"vietnam\", \"NewConfirmed\": 3, \"TotalConfirmed\": 2594, \"NewDeaths\": 0, \"TotalDeaths\": 35, \"NewRecovered\": 0, \"TotalRecovered\": 2308, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"24393299-c037-425f-9f64-4c4aedd3e577\", \"Country\": \"Yemen\", \"CountryCode\": \"YE\", \"Slug\": \"yemen\", \"NewConfirmed\": 82, \"TotalConfirmed\": 4115, \"NewDeaths\": 12, \"TotalDeaths\": 863, \"NewRecovered\": 51, \"TotalRecovered\": 1657, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} }, { \"ID\": \"af9b2f52-2168-44c8-8f56-ceed103e4aae\", \"Country\": \"Zimbabwe\", \"CountryCode\": \"ZW\", \"Slug\": \"zimbabwe\", \"NewConfirmed\": 17, \"TotalConfirmed\": 36839, \"NewDeaths\": 0, \"TotalDeaths\": 1520, \"NewRecovered\": 14, \"TotalRecovered\": 34617, \"Date\": \"2021-03-30T03:47:28.643Z\", \"Premium\": {} } ], \"Date\": \"2021-03-30T03:47:28.643Z\" } Preview  Zip Package au.edu.unsw.infs3634.covidtracker; Class name Summary Source type: JSON Schema JSON YAML Schema YAML Annotation style: Jackson 2.x Gson Moshi None Generate builder methods Use primitive types Use long integers Use double numbers Use Joda dates Include getters and setters Include constructors Include hashCode and equals Include toString Include JSR-303 annotations Allow additional properties Make classes serializable Make classes parcelable Initialize collections Property word delimiters: - _ ×Copy to Clipboard Preview ----------------------------------- au.edu.unsw.infs3634.covidtracker;.Country.java----------------------------------- package au.edu.unsw.infs3634.covidtracker; ; import javax.annotation.Generated; import com.google.gson.annotations.Expose; import com.google.gson.annotations.SerializedName; @Generated(\"jsonschema2pojo\") public class Country { @SerializedName(\"ID\") @Expose private String id; @SerializedName(\"Country\") @Expose private String country; @SerializedName(\"CountryCode\") @Expose private String countryCode; @SerializedName(\"Slug\") @Expose private String slug; @SerializedName(\"NewConfirmed\") @Expose private Integer newConfirmed; @SerializedName(\"TotalConfirmed\") @Expose private Integer totalConfirmed; @SerializedName(\"NewDeaths\") @Expose private Integer newDeaths; @SerializedName(\"TotalDeaths\") @Expose private Integer totalDeaths; @SerializedName(\"NewRecovered\") @Expose private Integer newRecovered; @SerializedName(\"TotalRecovered\") @Expose private Integer totalRecovered; @SerializedName(\"Date\") @Expose private String date; @SerializedName(\"Premium\") @Expose private Premium premium; public String getId() { return id; } public void setId(String id) { this.id = id; } public String getCountry() { return country; } public void setCountry(String country) { this.country = country; } public String getCountryCode() { return countryCode; } public void setCountryCode(String countryCode) { this.countryCode = countryCode; } public String getSlug() { return slug; } public void setSlug(String slug) { this.slug = slug; } public Integer getNewConfirmed() { return newConfirmed; } public void setNewConfirmed(Integer newConfirmed) { this.newConfirmed = newConfirmed; } public Integer getTotalConfirmed() { return totalConfirmed; } public void setTotalConfirmed(Integer totalConfirmed) { this.totalConfirmed = totalConfirmed; } public Integer getNewDeaths() { return newDeaths; } public void setNewDeaths(Integer newDeaths) { this.newDeaths = newDeaths; } public Integer getTotalDeaths() { return totalDeaths; } public void setTotalDeaths(Integer totalDeaths) { this.totalDeaths = totalDeaths; } public Integer getNewRecovered() { return newRecovered; } public void setNewRecovered(Integer newRecovered) { this.newRecovered = newRecovered; } public Integer getTotalRecovered() { return totalRecovered; } public void setTotalRecovered(Integer totalRecovered) { this.totalRecovered = totalRecovered; } public String getDate() { return date; } public void setDate(String date) { this.date = date; } public Premium getPremium() { return premium; } public void setPremium(Premium premium) { this.premium = premium; } } ----------------------------------- au.edu.unsw.infs3634.covidtracker;.Global.java----------------------------------- package au.edu.unsw.infs3634.covidtracker; ; import javax.annotation.Generated; import com.google.gson.annotations.Expose; import com.google.gson.annotations.SerializedName; @Generated(\"jsonschema2pojo\") public class Global { @SerializedName(\"NewConfirmed\") @Expose private Integer newConfirmed; @SerializedName(\"TotalConfirmed\") @Expose private Integer totalConfirmed; @SerializedName(\"NewDeaths\") @Expose private Integer newDeaths; @SerializedName(\"TotalDeaths\") @Expose private Integer totalDeaths; @SerializedName(\"NewRecovered\") @Expose private Integer newRecovered; @SerializedName(\"TotalRecovered\") @Expose private Integer totalRecovered; @SerializedName(\"Date\") @Expose private String date; public Integer getNewConfirmed() { return newConfirmed; } public void setNewConfirmed(Integer newConfirmed) { this.newConfirmed = newConfirmed; } public Integer getTotalConfirmed() { return totalConfirmed; } public void setTotalConfirmed(Integer totalConfirmed) { this.totalConfirmed = totalConfirmed; } public Integer getNewDeaths() { return newDeaths; } public void setNewDeaths(Integer newDeaths) { this.newDeaths = newDeaths; } public Integer getTotalDeaths() { return totalDeaths; } public void setTotalDeaths(Integer totalDeaths) { this.totalDeaths = totalDeaths; } public Integer getNewRecovered() { return newRecovered; } public void setNewRecovered(Integer newRecovered) { this.newRecovered = newRecovered; } public Integer getTotalRecovered() { return totalRecovered; } public void setTotalRecovered(Integer totalRecovered) { this.totalRecovered = totalRecovered; } public String getDate() { return date; } public void setDate(String date) { this.date = date; } } ----------------------------------- au.edu.unsw.infs3634.covidtracker;.Premium.java----------------------------------- package au.edu.unsw.infs3634.covidtracker; ; import javax.annotation.Generated; @Generated(\"jsonschema2pojo\") public class Premium { } ----------------------------------- au.edu.unsw.infs3634.covidtracker;.Summary.java----------------------------------- package au.edu.unsw.infs3634.covidtracker; ; import java.util.List; import javax.annotation.Generated; import com.google.gson.annotations.Expose; import com.google.gson.annotations.SerializedName; @Generated(\"jsonschema2pojo\") public class Summary { @SerializedName(\"ID\") @Expose private String id; @SerializedName(\"Message\") @Expose private String message; @SerializedName(\"Global\") @Expose private Global global; @SerializedName(\"Countries\") @Expose private List<Country> countries = null; @SerializedName(\"Date\") @Expose private String date; public String getId() { return id; } public void setId(String id) { this.id = id; } public String getMessage() { return message; } public void setMessage(String message) { this.message = message; } public Global getGlobal() { return global; } public void setGlobal(Global global) { this.global = global; } public List<Country> getCountries() { return countries; } public void setCountries(List<Country> countries) { this.countries = countries; } public String getDate() { return date; } public void setDate(String date) { this.date = date; } } Use this tool offline:Maven pluginGradle pluginAnt taskCLIJava API Reference properties For each property present in the 'properties' definition, we add a property to a given Java class according to the JavaBeans spec. A private field is added to the parent class, along with accompanying accessor methods (getter and setter). E.g. json schema { \"type\" : \"object\", \"properties\" : { \"foo\" : { \"type\" : \"string\" } } } resulting Java type: public class MyObject { private String foo; public String getFoo() { return foo; } public void setFoo(String foo) { this.foo = foo; } } If the generate-builders property is set to true, then a builder method is also added: public MyObject withFoo(String foo) { this.foo = foo; return this; } These builder methods allow easy, one-liner construction and initialization of objects, like: MyObject o = new MyObject().withFoo(\"foo\").withBar(\"bar\").withBaz(\"baz\"); type When encountering the type attribute (e.g. for properties), jsonschema2pojo maps schema types as follows: Schema type\tJava type string\tjava.lang.String number\tjava.lang.Double integer\tjava.lang.Integer boolean\tjava.lang.Boolean object\tgenerated Java type array\tjava.util.List array (with \"uniqueItems\":true)\tjava.util.Set null\tjava.lang.Object any\tjava.lang.Object When applying the usePrimitives option, the primitives double, integer and boolean will replace the wrapper types listed above. additionalProperties If additionalProperties is specified and set to the boolean value false, then the generated Java type does not support additional properties. If the additionalProperties node is undefined (not present), null or empty, then a new bean property named \"additionalProperties\", of type Map<String,Object> is added to the generated type (with appropriate accessors). The accessors are annotated to allow Jackson to marshal/unmarshal unrecognised (additional) properties found in JSON data from/to this map. So, schema file myObject.json like: { \"type\" : \"object\" } or { \"type\" : \"object\", \"additionalProperties\" : {} } produces: public class MyObject { private java.util.Map<String, Object> additionalProperties = new java.util.HashMap<String, Object>(); @org.codehaus.jackson.annotate.JsonAnyGetter public java.util.Map<String, Object> getAdditionalProperties() { return this.additionalProperties; } @org.codehaus.jackson.annotate.JsonAnySetter public void setAdditionalProperties(String name, Object value) { this.additionalProperties.put(name, value); } } If the additionalProperties node is present and specifies a schema, then an \"additionalProperties\" map is added to the generated type and map values will be restricted according to the additionalProperties schema. So, schema file myObject.json like: { \"type\" : \"object\", \"additionalProperties\" : { \"type\" : \"number\" } } produces: public class MyObject { private java.util.Map<String, Double> additionalProperties = new java.util.HashMap<String, Double>(); @org.codehaus.jackson.annotate.JsonAnyGetter public java.util.Map<String, Double> getAdditionalProperties() { return this.additionalProperties; } @org.codehaus.jackson.annotate.JsonAnySetter public void setAdditionalProperties(String name, Double value) { this.additionalProperties.put(name, value); } } Where the additionalProperties schema species a type object, map values will be restricted to instances of a newly generated Java type. If the given schema does not specify the javaType property, the name of the newly generated type will be derived from the parent type name and the suffix 'Property'. So, schema file myObject.json like: { \"type\" : \"object\", \"additionalProperties\" : { \"type\" : \"object\" } } produces: public class MyObject { private java.util.Map<String, MyObjectProperty> additionalProperties = new java.util.HashMap<String, MyObjectProperty>(); @org.codehaus.jackson.annotate.JsonAnyGetter public java.util.Map<String, MyObjectProperty> getAdditionalProperties() { return this.additionalProperties; } @org.codehaus.jackson.annotate.JsonAnySetter public void setAdditionalProperties(String name, MyObjectProperty value) { this.additionalProperties.put(name, value); } } items The 'items' rule defines a schema for the contents of an array. In generated Java types, the value of 'items' dictates the generic type of Lists and Sets. So, this example JSON Schema: { \"type\" : \"object\", \"properties\" : { \"myArrayProperty\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"string\" } } } } produces a property called myArrayProperty of type List<String> in the generated Java type. If items itself declares a complex type (\"type\" : \"object\") then the generic type of the List or Set will itself be a generated type e.g. List<MyComplexType>. required The 'required' schema rule doesn't produce a structural change in generated Java types, it simply causes the text (Required) to be added to the JavaDoc for fields, getters and setters. optional The 'optional' schema rule doesn't produce a structural change in generated Java types, it simply causes the text (Optional) to be added to the JavaDoc for fields, getters and setters. This schema rule is deprecated since Draft 03 of the JSON Schema specification. Rather than marking optional properties as optional, one should mark required properties as required. uniqueItems For properties of type 'array', setting uniqueItems to false (or omitting it entirely) causes the generated Java property to be of type java.util.List. When uniqueItems is set to true, the generated Java property value is of type java.util.Set. enum When jsonschema2pojo encounters JSON Schema declarations of type \"enum\" it generates a Java enum type. When a generated type includes a property of type \"enum\", the generated enum type becomes a static inner type declared within the enclosing (parent) generated type. If an enum is declared at the root of a schema, the generated enum is a public Java type with no enclosing type. The actual enum value is held in a 'value' property inside the enum constants. The generated enum type also includes annotations that allow Jackson to correctly marshal/unmarshal JSON values, even when the actual values contain spaces, start with digits, or contain other characters that cannot legally form part of the Java enum constant name. So, if we declare a schema myObject.json with an enum property: { \"type\" : \"object\", \"properties\" : { \"myEnum\" : { \"type\" : \"string\", \"enum\" : [\"one\", \"secondOne\", \"3rd one\"] } } } we see a generated MyObject Java type with an inner enum type like: @Generated(\"com.googlecode.jsonschema2pojo\") public static enum MyEnum { ONE(\"one\"), SECOND_ONE(\"secondOne\"), _3_RD_ONE(\"3rd one\"); private final String value; private MyEnum(String value) { this.value = value; } @JsonValue @Override public String toString() { return this.value; } @JsonCreator public static MyObject.MyEnum fromValue(String value) { for (MyObject.MyEnum c: MyObject.MyEnum.values()) { if (c.value.equals(value)) { return c; } } throw new IllegalArgumentException(value); } } default Using the default rule in your JSON Schema causes the corresponding property in your generated Java type to be initialised with a default value. You'll see the default value is assigned during field declaration. Default values are supported for the JSON Schema properties of type string, integer, number and boolean; for enum properties; for properties with format of utc-millisec or date-time; for arrays of any of these types. Some example JSON Schema property definitions and their corresponding Java field declaration are shown: JSON Schema\tJava myString : { \"type\":\"string\", \"default\":\"abc\"}\tprivate String myString = \"abc\"; myInteger : { \"type\":\"integer\", \"default\":\"100\"}\tprivate Integer myInteger = 100; myNumber : { \"type\":\"number\", \"default\":\"10.3\"}\tprivate Double myNumber = 10.3D; myMillis : { \"type\":\"string\", \"format\":\"utc-millisec\", \"default\":\"500\"}\tprivate Long myMillis = 500L; myDate : { \"type\":\"string\", \"format\":\"date-time\", \"default\":\"500\"}\tprivate Date myDate = new Date(500L); myDate : { \"type\":\"string\", \"format\":\"date-time\", \"default\":\"2011-02-24T09:25:23.112+0000\"}\tprivate Date myDate = new Date(1298539523112L); myList : { \"type\":\"array\", \"default\":[\"a\",\"b\",\"c\"]}\tprivate List<String> myList = new ArrayList<String>(Arrays.asList(\"a\",\"b\",\"c\")); As the above table shows, dates can be given a default using either a number of millis since epoch or a date string (ISO 8601 or RFC 1123). In either case, the date will be initialized using a millisecond value in the generated Java type. title The 'title' rule appearing in a JSON Schema causes the given title text to be added to the JavaDoc for a property. The title text will appear in JavaDoc comments of the field, getter and setter. title text always appears before description text. description The description rule appearing in a JSON Schema causes the given description text to be added to the JavaDoc for a property. The description text will appear in JavaDoc comments of the field, getter and setter. description text always appears after title text. format Using the format rule for a property can influence the Java type chosen to represent your property values. When you use a format value that jsonschema2pojo recognises, it will use a better (more appropriate) type for your Java bean property. For example, when I define a JSON property in my schema of type string, if I also attach the rule \"format\" : \"uri\" to that property (because my string is actually a URI) then my corresponding Java property will now have the type java.net.URI instead of java.lang.String. How jsonschema2pojo maps format values to Java types: Format value\tJava type \"date-time\"\tjava.util.Date \"date\"\tString \"time\"\tString \"utc-millisec\"\tlong \"regex\"\tjava.util.regex.Pattern \"color\"\tString \"style\"\tString \"phone\"\tString \"uri\"\tjava.net.URI \"email\"\tString \"ip-address\"\tString \"ipv6\"\tString \"host-name\"\tString \"uuid\"\tjava.util.UUID anything else (unrecognised format)\ttype is unchanged extends When the extends rule is encountered in your JSON schema (to indicate that one type extends another), this will produce an extends relationship in your generated Java types. That extends value can be a schema given in-line, or referenced using $ref. As an example, lets imagine a file flower.json with the following content: { \"type\" : \"object\" } and a second file rose.json which contains: { \"type\" : \"object\", \"extends\" : { \"$ref\" : \"flower.json\" } } The two resulting Java types generated from these schemas would be: public class Flower { .... } and public class Rose extends Flower { .... } Note: the extends rule in JSON schema accepts a schema or an array of schemas - jsonschema2pojo only supports the single schema variant. $ref A '$ref' rule can be used wherever a schema is expected i.e at the root of a schema document, as part of a property definition, as part of the items definition for an array type, as part of an additionalProperties definition. Supported protocols: http://, https:// file:// classpath:, resource:, java: (all synonyms used to resolve schemas from the classpath). Note: If you want to refer to classpath resources from the current Maven module, you will need to bind jsonschema2pojo to a later phase. By default jsonschema2pojo is bound to generate-sources but if you want resources present in the current module to be on the classpath when the plugin executes, then you should bind jsonschema2pojo to the process-resources phase. For example, to refer to another document in the same directory which will provide the definition of a 'user' object, you might create a schema like: { \"type\" : \"object\", \"properties\" : { \"loggedInUser\" : { \"$ref\" : \"user.json\" } } } jsonschema2pojo expects $ref values (URIs) to be URLs. Both absolute and relative URLs are valid. You may also refer to part of a schema document using the '#' character followed by a slash or dot delimited path. Example using an absolute reference: { \"type\" : \"object\", \"properties\" : { \"address\" : { \"$ref\" : \"http://json-schema.org/address\" } } } Example using a fragment path to reuse a schema definition: { \"type\" : \"object\", \"properties\" : { \"child1\" : { \"type\" : \"string\" }, \"child2\" : { \"$ref\" : \"#/properties/child1\" } } } Example treeNode.json using a self reference to build a tree: { \"description\" : \"Tree node\", \"type\" : \"object\", \"properties\" : { \"children\" : { \"type\" : \"array\", \"items\" : { \"$ref\" : \"#\" } } } } which produces Java code similar to: public class TreeNode { public List<TreeNode> getChildren() {...} public void setChildren(List<TreeNode> children) {...} } minimum/maximum, minItems/maxItems, minLength/maxLength, required, pattern The Maven plugin, CLI and Ant task allow JSR-303 annotations to be activated via a config argument. When activated, the following JSR-303 annotations will be generated: Schema rule\tAnnotation maximum\t@DecimalMax minimum\t@DecimalMin minItems,maxItems\t@Size minLength,maxLength\t@Size pattern\t@Pattern required\t@NotNull Extensions javaType jsonschema2pojo supports an extension property 'javaType' that applies to schemas and allows you to specify a fully qualified name for your generated Java type. For example, imagine a schema fooBar.json like: { \"type\" : \"object\" } When invoking jsonschema2pojo with package argument com.example the generated Java type will have a fully qualified name of com.example.FooBar. If the javaType property is added to fooBar.json like: { \"javaType\" : \"com.other.package.CustomTypeName\", \"type\" : \"object\" } Then invoking jsonschema2pojo with package argument com.example will result in a generated Java type with a fully qualified name of com.other.package.CustomTypeName. The javaType property may appear in any schema definition, not just the root schema in a schema document. For example, this file 'parent.json' invoked using package name com.example: { \"type\" : \"object\", \"properties\" : { \"myProperty\" : { \"javaType\" : \"com.other.package.CustomChildName\", \"type\" : \"object\" } } } will result in two generated Java types: com.example.Parent com.other.package.CustomChildName existingJavaType The existingJavaType property allows existing Java types to be used in your POJOs. The value of existingJavaType should refer to an existing class or interface, and that class/interface will not be generated. When referencing existing classes, it's also possible to supply generic type arguments, for instance: { \"type\" : \"object\", \"properties\" : { \"myProperty\" : { \"existingJavaType\" : \"java.util.Map<String,Integer>\", \"type\" : \"object\" } } } javaEnumNames NOTE: You must only use one of javaEnumNames or javaEnums, the later being a more robust extension. Any schema that makes use of enum may include javaEnumNames. This property allows you to take control of naming your Java enum constants and avoid relying on auto-generated names. If your schema includes javaEnumNames like: { \"type\" : \"object\", \"properties\" : { \"foo\" : { \"type\" : \"string\", \"enum\" : [\"H\",\"L\"], \"javaEnumNames\" : [\"HIGH\",\"LOW\"] } } } Then you'll see a generated type like: public enum Foo { HIGH(\"H\"), LOW(\"L\"); ... } javaEnums NOTE: You must only use one of javaEnumNames or javaEnums, the later being a more robust extension. Any schema that makes use of enum may include javaEnums. This property allows you to take control of naming your Java enum constants and avoid relying on auto-generated names and add per-enum constant documentation with title and description. If your schema includes javaEnumNames like: { \"$id\": \"https://cubrc.org/rigors/schemas/common/com/examples/Digits.schema.json\", \"$schema\": \"http://json-schema.org/draft-07/schema#\", \"type\": \"string\", \"enum\": [\"1\", \"2\", \"3\", \"4\"], \"javaEnums\": [ { \"name\": \"ONE\", \"title\": \"The first number.\", \"description\": \"1 (one, also called unit, unity, and (multiplicative) identity) is a number, and a numerical digit used to represent that number in numerals. (https://en.wikipedia.org/wiki/1)\" }, { \"name\": \"TWO\", \"title\": \"The second number.\", \"description\": \"2 (two) is a number, numeral, and glyph. \\n\\nIt is the natural number following 1 and preceding 3. (https://en.wikipedia.org/wiki/2)\" }, { \"name\": \"THREE\", \"title\": \"The third number.\", \"description\": \"3 (three) is a number, numeral, and glyph. It is the natural number following 2 and preceding 4. (https://en.wikipedia.org/wiki/3)\" }, { \"name\": \"FOUR\", \"title\": \"The fourth number.\", \"description\": \"4 (four) is a number, numeral, and glyph. It is the natural number following 3 and preceding 5. (https://en.wikipedia.org/wiki/4)\" } ], \"additionalProperties\": false, \"required\": [], \"definitions\": {} } Then you'll see a generated type like: public enum Digits { /** * The first number. * <p> *  1 (one, also called unit, unity, and (multiplicative) identity) is a number, and a numerical digit used to represent that number in numerals. (https://en.wikipedia.org/wiki/1) * */ ONE(\"1\"), /** * The second number. * <p> *  2 (two) is a number, numeral, and glyph. * * It is the natural number following 1 and preceding 3. (https://en.wikipedia.org/wiki/2) * */ TWO(\"2\"), /** * The third number. * <p> *  3 (three) is a number, numeral, and glyph. It is the natural number following 2 and preceding 4. (https://en.wikipedia.org/wiki/3) * */ THREE(\"3\"), /** * The fourth number. * <p> *  4 (four) is a number, numeral, and glyph. It is the natural number following 3 and preceding 5. (https://en.wikipedia.org/wiki/4) * */ FOUR(\"4\"); ... } javaInterfaces Any schema may include a javaInterfaces property, the value of this property is an array of strings. Each string is expected to contain the fully-qualified name of a Java interface. The Java type generated by the schema will implement all the given interfaces. If the javaInterfaces property is added to fooBar.json like: { \"javaInterfaces\" : [\"java.io.Serializable\", \"Cloneable\"], \"type\" : \"object\" } then the result will be a class defined like: public class FooBar implements Serializable, Cloneable { ... javaJsonView Any schema may include a javaJsonView property, the value of the property is a fully qualified class name. The property causes a @JsonView annotation to be added to the member with the given class for a value. This only works for Jackson-based annotators. It is supported for v1 and v2 Jackson. See Jackson Annotations. If javaJsonView is added to fooBar.json schema as follows: { \"type\": \"object\", \"properties\": { \"internalStatus\": { \"javaJsonView\": \"com.example.views.Internal\", \"type\": \"string\" } } } Then the resulting FooBar.java will have: import com.example.views.Internal; public class FooBar { @JsonView(Internal.class) private String internalStatus; } javaName Using javaName rule allows you to define custom names for java bean properties instead of those inferred from the corresponding json property names. This also affects setters and getters. For example, the following schema: { \"type\": \"object\", \"properties\": { \"a\": { \"javaName\": \"b\", \"type\": \"string\" } } } will produce Java code similar to the following: public class MyClass { @JsonProperty(\"a\") private String b; @JsonProperty(\"a\") public String getB() { return b; } @JsonProperty(\"a\") public void setB(String b) { this.b = b; } } customPattern/customTimezone Set a custom format pattern for date or date-time fields that will be used during serialization (if your binding library supports it). If you're using Jackson 2 this will cause an @JsonFormat annotation to be added. For 'date-time' fields you may also set a custom timezone (if you want to use a timezone other than UTC when writing out the date-time as a string). { \"type\" : \"object\", \"properties\" : { \"dob\" : { \"type\" : \"string\", \"format\" : \"date\", \"customPattern\" : \"yy-MM-dd\" }, \"updatedDate\" : { \"type\" : \"string\", \"format\" : \"date-time\", \"customDateTimePattern\" : \"yyyy-MM-dd'T'HH:mm:ssZ\", \"customTimezone\": \"PDT\" } } } There are two important things to note before using this extension property: If you set the formatDates/formatDateTimes global config options to true, you'll get default ISO-8601/RFC 3339 formatting without having to set these custom properties. You should be aware that setting a custom date or date-time pattern may mean that the JSON content you produce is not valid according to the rules of JSON Schema. excludedFromEqualsAndHashCode You can specify which fields should be omitted in the generated equals() and hashCode() methods using the excludedFromEqualsAndHashCode rule. These fields can be either listed in an object-level array or flagged individually. This option is only meaningful if equals() and hashCode() generation is enabled. { \"type\": \"object\", \"excludedFromEqualsAndHashCode\" : [ \"excludedByArray\" ], \"properties\": { \"notExcluded\" : { \"type\" : \"string\" }, \"excludedByProperty\" : { \"type\" : \"string\", \"excludedFromEqualsAndHashCode\" : true } } In the above example, only notExcluded will be inlcuded in equals() and hashCode(). © 2012-2018 Joe Littlejohn";
}
